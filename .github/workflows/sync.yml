name: Sync Changed Files to Destination Repo

on:
  workflow_dispatch:
    inputs:
      source_branch:
        description: "Source branch to sync from"
        required: true
        default: "main"
      target_branch:
        description: "Target branch to sync into"
        required: true
        default: "main"

jobs:
  sync-repo:
    runs-on: ubuntu-latest
    timeout-minutes: 30  # Timeout set to 30 minutes to prevent long delays

    steps:
      - name: Checkout Source Repository
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.source_branch }}

      - name: Setup Destination Repo
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          # Clone destination repository if it's not already cloned
          if [ ! -d "destination-repo" ]; then
            git clone https://$GH_PAT@github.com/mahbpq9/test.git destination-repo
          fi

          # Change directory to the destination repo
          cd destination-repo

          # Ensure we are on the target branch, create it if necessary
          if git ls-remote --exit-code --heads origin ${{ inputs.target_branch }}; then
            git checkout ${{ inputs.target_branch }}
          else
            git checkout -b ${{ inputs.target_branch }}
            git push -u origin ${{ inputs.target_branch }}
          fi

          # If repository is empty, create an initial commit
          if [ ! "$(git log --oneline)" ]; then
            echo "# Initial commit" > README.md
            git add README.md
            git commit -m "Initial commit"
            git push -u origin ${{ inputs.target_branch }}
          fi

      - name: Sync Source Files to Target Branch
        run: |
          # Sync files using rsync (exclude .git folder)
          rsync -av --exclude='.git' --delete ./ destination-repo/ || [[ $? -eq 24 ]]

      - name: Push Changes to Target Branch
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          cd destination-repo
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"

          git add .
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Sync changes from ${{ inputs.source_branch }}"
            git push -u origin ${{ inputs.target_branch }}
          fi
